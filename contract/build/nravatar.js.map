{"version":3,"file":"nravatar.js","sources":["../node_modules/near-sdk-js/lib/types/vm_types.js","../node_modules/near-sdk-js/lib/utils.js","../node_modules/@scure/base/lib/esm/index.js","../node_modules/near-sdk-js/lib/types/public_key.js","../node_modules/near-sdk-js/lib/api.js","../node_modules/near-sdk-js/lib/near-bindgen.js","../node_modules/near-sdk-js/lib/collections/lookup-map.js","../node_modules/near-sdk-js/lib/collections/vector.js","../node_modules/near-sdk-js/lib/collections/unordered-map.js","../node_modules/near-sdk-js/lib/promise.js","../src/model.ts","../src/contract.ts"],"sourcesContent":["export var PromiseResult;\n(function (PromiseResult) {\n    PromiseResult[PromiseResult[\"NotReady\"] = 0] = \"NotReady\";\n    PromiseResult[PromiseResult[\"Successful\"] = 1] = \"Successful\";\n    PromiseResult[PromiseResult[\"Failed\"] = 2] = \"Failed\";\n})(PromiseResult || (PromiseResult = {}));\nexport var PromiseError;\n(function (PromiseError) {\n    PromiseError[PromiseError[\"Failed\"] = 0] = \"Failed\";\n    PromiseError[PromiseError[\"NotReady\"] = 1] = \"NotReady\";\n})(PromiseError || (PromiseError = {}));\n","export function u8ArrayToBytes(array) {\n    let ret = \"\";\n    for (let e of array) {\n        ret += String.fromCharCode(e);\n    }\n    return ret;\n}\n// TODO this function is a bit broken and the type can't be string\n// TODO for more info: https://github.com/near/near-sdk-js/issues/78\nexport function bytesToU8Array(bytes) {\n    let ret = new Uint8Array(bytes.length);\n    for (let i = 0; i < bytes.length; i++) {\n        ret[i] = bytes.charCodeAt(i);\n    }\n    return ret;\n}\nexport function bytes(strOrU8Array) {\n    if (typeof strOrU8Array == \"string\") {\n        return checkStringIsBytes(strOrU8Array);\n    }\n    else if (strOrU8Array instanceof Uint8Array) {\n        return u8ArrayToBytes(strOrU8Array);\n    }\n    throw new Error(\"bytes: expected string or Uint8Array\");\n}\nfunction checkStringIsBytes(str) {\n    for (let i = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) > 255) {\n            throw new Error(`string ${str} at index ${i}: ${str[i]} is not a valid byte`);\n        }\n    }\n    return str;\n}\nexport function assert(b, str) {\n    if (b) {\n        return;\n    }\n    else {\n        throw Error(\"assertion failed: \" + str);\n    }\n}\n","/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexport const utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexport const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexport const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexport const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexport const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexport const base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexport const base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexport const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexport const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexport const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexport const base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nexport const base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexport const bech32 = genBech32('bech32');\nexport const bech32m = genBech32('bech32m');\nexport const utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexport const hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nexport const bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexport const str = bytesToString;\nexport const stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexport const bytes = stringToBytes;\n","import { bytes } from \"../utils\";\nimport { base58 } from '@scure/base';\nexport var CurveType;\n(function (CurveType) {\n    CurveType[CurveType[\"ED25519\"] = 0] = \"ED25519\";\n    CurveType[CurveType[\"SECP256K1\"] = 1] = \"SECP256K1\";\n})(CurveType || (CurveType = {}));\nfunction data_len(c) {\n    switch (c) {\n        case CurveType.ED25519:\n            return 32;\n        case CurveType.SECP256K1:\n            return 64;\n        default:\n            throw new UnknownCurve();\n    }\n}\nfunction split_key_type_data(value) {\n    let idx = value.indexOf(\":\");\n    if (idx >= 0) {\n        return [curveTypeFromStr(value.substring(0, idx)), value.substring(idx + 1)];\n    }\n    else {\n        return [CurveType.ED25519, value];\n    }\n}\nexport function curveTypeFromStr(value) {\n    switch (value) {\n        case \"ed25519\":\n            return CurveType.ED25519;\n        case \"secp256k1\":\n            return CurveType.SECP256K1;\n        default:\n            throw new UnknownCurve();\n    }\n}\nexport class ParsePublicKeyError extends Error {\n}\nexport class InvalidLengthError extends ParsePublicKeyError {\n    constructor(length) {\n        super(`Invalid length: ${length}`);\n        this.length = length;\n    }\n}\nexport class Base58Error extends ParsePublicKeyError {\n    constructor(error) {\n        super(`Base58 error: ${error}`);\n        this.error = error;\n    }\n}\nexport class UnknownCurve extends ParsePublicKeyError {\n    constructor() {\n        super(\"Unknown curve\");\n    }\n}\nexport class PublicKey {\n    constructor(data) {\n        this.data = data;\n        let curve_type = data.charCodeAt(0);\n        let curve_len = data_len(curve_type);\n        if (data.length != curve_len + 1) {\n            throw new InvalidLengthError(data.length);\n        }\n        this.data = data;\n    }\n    curveType() {\n        return this.data.charCodeAt(0);\n    }\n    static fromString(s) {\n        let [curve, key_data] = split_key_type_data(s);\n        let data;\n        try {\n            data = bytes(base58.decode(key_data));\n        }\n        catch (err) {\n            throw new Base58Error(err.message);\n        }\n        return new PublicKey(String.fromCharCode(curve) + data);\n    }\n}\n","import { PromiseResult } from \"./types\";\nconst U64_MAX = 2n ** 64n - 1n;\nconst EVICTED_REGISTER = U64_MAX - 1n;\nexport function log(...params) {\n    env.log(`${params\n        .map(x => x === undefined ? 'undefined' : x) // Stringify undefined\n        .map(x => typeof (x) === 'object' ? JSON.stringify(x) : x) // Convert Objects to strings\n        .join(' ')}` // Convert to string\n    );\n}\nexport function signerAccountId() {\n    env.signer_account_id(0);\n    return env.read_register(0);\n}\nexport function signerAccountPk() {\n    env.signer_account_pk(0);\n    return env.read_register(0);\n}\nexport function predecessorAccountId() {\n    env.predecessor_account_id(0);\n    return env.read_register(0);\n}\nexport function blockIndex() {\n    return env.block_index();\n}\nexport function blockHeight() {\n    return blockIndex();\n}\nexport function blockTimestamp() {\n    return env.block_timestamp();\n}\nexport function epochHeight() {\n    return env.epoch_height();\n}\nexport function attachedDeposit() {\n    return env.attached_deposit();\n}\nexport function prepaidGas() {\n    return env.prepaid_gas();\n}\nexport function usedGas() {\n    return env.used_gas();\n}\nexport function randomSeed() {\n    env.random_seed(0);\n    return env.read_register(0);\n}\nexport function sha256(value) {\n    env.sha256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak256(value) {\n    env.keccak256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak512(value) {\n    env.keccak512(value, 0);\n    return env.read_register(0);\n}\nexport function ripemd160(value) {\n    env.ripemd160(value, 0);\n    return env.read_register(0);\n}\nexport function ecrecover(hash, sig, v, malleabilityFlag) {\n    let ret = env.ecrecover(hash, sig, v, malleabilityFlag, 0);\n    if (ret === 0n) {\n        return null;\n    }\n    return env.read_register(0);\n}\n// NOTE: \"env.panic(msg)\" is not exported, use \"throw Error(msg)\" instead\nexport function panicUtf8(msg) {\n    env.panic_utf8(msg);\n}\nexport function logUtf8(msg) {\n    env.log_utf8(msg);\n}\nexport function logUtf16(msg) {\n    env.log_utf16(msg);\n}\nexport function storageRead(key) {\n    let ret = env.storage_read(key, 0);\n    if (ret === 1n) {\n        return env.read_register(0);\n    }\n    else {\n        return null;\n    }\n}\nexport function storageHasKey(key) {\n    let ret = env.storage_has_key(key);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function validatorStake(accountId) {\n    return env.validator_stake(accountId);\n}\nexport function validatorTotalStake() {\n    return env.validator_total_stake();\n}\nexport function altBn128G1Multiexp(value) {\n    env.alt_bn128_g1_multiexp(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128G1Sum(value) {\n    env.alt_bn128_g1_sum(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128PairingCheck(value) {\n    let ret = env.alt_bn128_pairing_check(value);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function storageGetEvicted() {\n    return env.read_register(EVICTED_REGISTER);\n}\nexport function currentAccountId() {\n    env.current_account_id(0);\n    return env.read_register(0);\n}\nexport function input() {\n    env.input(0);\n    return env.read_register(0);\n}\nexport function storageUsage() {\n    return env.storage_usage();\n}\nexport function accountBalance() {\n    return env.account_balance();\n}\nexport function accountLockedBalance() {\n    return env.account_locked_balance();\n}\nexport function valueReturn(value) {\n    env.value_return(value);\n}\nexport function promiseCreate(accountId, methodName, args, amount, gas) {\n    return env.promise_create(accountId, methodName, args, amount, gas);\n}\nexport function promiseThen(promiseIndex, accountId, methodName, args, amount, gas) {\n    return env.promise_then(promiseIndex, accountId, methodName, args, amount, gas);\n}\nexport function promiseAnd(...promiseIndex) {\n    return env.promise_and(...promiseIndex);\n}\nexport function promiseBatchCreate(accountId) {\n    return env.promise_batch_create(accountId);\n}\nexport function promiseBatchThen(promiseIndex, accountId) {\n    return env.promise_batch_then(promiseIndex, accountId);\n}\nexport function promiseBatchActionCreateAccount(promiseIndex) {\n    env.promise_batch_action_create_account(promiseIndex);\n}\nexport function promiseBatchActionDeployContract(promiseIndex, code) {\n    env.promise_batch_action_deploy_contract(promiseIndex, code);\n}\nexport function promiseBatchActionFunctionCall(promiseIndex, methodName, args, amount, gas) {\n    env.promise_batch_action_function_call(promiseIndex, methodName, args, amount, gas);\n}\nexport function promiseBatchActionTransfer(promiseIndex, amount) {\n    env.promise_batch_action_transfer(promiseIndex, amount);\n}\nexport function promiseBatchActionStake(promiseIndex, amount, publicKey) {\n    env.promise_batch_action_stake(promiseIndex, amount, publicKey);\n}\nexport function promiseBatchActionAddKeyWithFullAccess(promiseIndex, publicKey, nonce) {\n    env.promise_batch_action_add_key_with_full_access(promiseIndex, publicKey, nonce);\n}\nexport function promiseBatchActionAddKeyWithFunctionCall(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames) {\n    env.promise_batch_action_add_key_with_function_call(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames);\n}\nexport function promiseBatchActionDeleteKey(promiseIndex, publicKey) {\n    env.promise_batch_action_delete_key(promiseIndex, publicKey);\n}\nexport function promiseBatchActionDeleteAccount(promiseIndex, beneficiaryId) {\n    env.promise_batch_action_delete_account(promiseIndex, beneficiaryId);\n}\nexport function promiseBatchActionFunctionCallWeight(promiseIndex, methodName, args, amount, gas, weight) {\n    env.promise_batch_action_function_call_weight(promiseIndex, methodName, args, amount, gas, weight);\n}\nexport function promiseResultsCount() {\n    return env.promise_results_count();\n}\nexport function promiseResult(resultIdx) {\n    let status = env.promise_result(resultIdx, 0);\n    if (status == PromiseResult.Successful) {\n        return env.read_register(0);\n    }\n    else {\n        throw Error(`Promise result ${status == PromiseResult.Failed ? \"Failed\" :\n            status == PromiseResult.NotReady ? \"NotReady\" : status}`);\n    }\n}\nexport function promiseReturn(promiseIdx) {\n    env.promise_return(promiseIdx);\n}\nexport function storageWrite(key, value) {\n    let exist = env.storage_write(key, value, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageRemove(key) {\n    let exist = env.storage_remove(key, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageByteCost() {\n    return 10000000000000000000n;\n}\n","import * as near from \"./api\";\nexport function initialize({}) {\n    return function (target, key, descriptor) {\n    };\n}\nexport function call({ privateFunction = false, payableFunction = false }) {\n    return function (target, key, descriptor) {\n        const originalMethod = descriptor.value;\n        descriptor.value = function (...args) {\n            if (privateFunction && near.predecessorAccountId() !== near.currentAccountId()) {\n                throw Error(\"Function is private\");\n            }\n            if (!payableFunction && near.attachedDeposit() > BigInt(0)) {\n                throw Error(\"Function is not payable\");\n            }\n            return originalMethod.apply(this, args);\n        };\n    };\n}\nexport function view({}) {\n    return function (target, key, descriptor) {\n    };\n}\nexport function NearBindgen({ requireInit = false }) {\n    return (target) => {\n        return class extends target {\n            static _create() {\n                return new target();\n            }\n            static _getState() {\n                const rawState = near.storageRead(\"STATE\");\n                return rawState ? this._deserialize(rawState) : null;\n            }\n            static _saveToStorage(obj) {\n                near.storageWrite(\"STATE\", this._serialize(obj));\n            }\n            static _getArgs() {\n                return JSON.parse(near.input() || \"{}\");\n            }\n            static _serialize(value) {\n                return JSON.stringify(value);\n            }\n            static _deserialize(value) {\n                return JSON.parse(value);\n            }\n            static _reconstruct(classObject, plainObject) {\n                for (const item in classObject) {\n                    if (classObject[item].constructor?.deserialize !== undefined) {\n                        classObject[item] = classObject[item].constructor.deserialize(plainObject[item]);\n                    }\n                    else {\n                        classObject[item] = plainObject[item];\n                    }\n                }\n                return classObject;\n            }\n            static _requireInit() {\n                return requireInit;\n            }\n        };\n    };\n}\n","import * as near from '../api';\nexport class LookupMap {\n    constructor(keyPrefix) {\n        this.keyPrefix = keyPrefix;\n    }\n    containsKey(key) {\n        let storageKey = this.keyPrefix + JSON.stringify(key);\n        return near.storageHasKey(storageKey);\n    }\n    get(key) {\n        let storageKey = this.keyPrefix + JSON.stringify(key);\n        let raw = near.storageRead(storageKey);\n        if (raw !== null) {\n            return JSON.parse(raw);\n        }\n        return null;\n    }\n    remove(key) {\n        let storageKey = this.keyPrefix + JSON.stringify(key);\n        if (near.storageRemove(storageKey)) {\n            return JSON.parse(near.storageGetEvicted());\n        }\n        return null;\n    }\n    set(key, value) {\n        let storageKey = this.keyPrefix + JSON.stringify(key);\n        let storageValue = JSON.stringify(value);\n        if (near.storageWrite(storageKey, storageValue)) {\n            return JSON.parse(near.storageGetEvicted());\n        }\n        return null;\n    }\n    extend(objects) {\n        for (let kv of objects) {\n            this.set(kv[0], kv[1]);\n        }\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        return new LookupMap(data.keyPrefix);\n    }\n}\n","import * as near from \"../api\";\nimport { u8ArrayToBytes } from \"../utils\";\nconst ERR_INDEX_OUT_OF_BOUNDS = \"Index out of bounds\";\nconst ERR_INCONSISTENT_STATE = \"The collection is an inconsistent state. Did previous smart contract execution terminate unexpectedly?\";\nfunction indexToKey(prefix, index) {\n    let data = new Uint32Array([index]);\n    let array = new Uint8Array(data.buffer);\n    let key = u8ArrayToBytes(array);\n    return prefix + key;\n}\n/// An iterable implementation of vector that stores its content on the trie.\n/// Uses the following map: index -> element\nexport class Vector {\n    constructor(prefix) {\n        this.length = 0;\n        this.prefix = prefix;\n    }\n    isEmpty() {\n        return this.length == 0;\n    }\n    get(index) {\n        if (index >= this.length) {\n            return null;\n        }\n        let storageKey = indexToKey(this.prefix, index);\n        return JSON.parse(near.storageRead(storageKey));\n    }\n    /// Removes an element from the vector and returns it in serialized form.\n    /// The removed element is replaced by the last element of the vector.\n    /// Does not preserve ordering, but is `O(1)`.\n    swapRemove(index) {\n        if (index >= this.length) {\n            throw new Error(ERR_INDEX_OUT_OF_BOUNDS);\n        }\n        else if (index + 1 == this.length) {\n            return this.pop();\n        }\n        else {\n            let key = indexToKey(this.prefix, index);\n            let last = this.pop();\n            if (near.storageWrite(key, JSON.stringify(last))) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    push(element) {\n        let key = indexToKey(this.prefix, this.length);\n        this.length += 1;\n        near.storageWrite(key, JSON.stringify(element));\n    }\n    pop() {\n        if (this.isEmpty()) {\n            return null;\n        }\n        else {\n            let lastIndex = this.length - 1;\n            let lastKey = indexToKey(this.prefix, lastIndex);\n            this.length -= 1;\n            if (near.storageRemove(lastKey)) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    replace(index, element) {\n        if (index >= this.length) {\n            throw new Error(ERR_INDEX_OUT_OF_BOUNDS);\n        }\n        else {\n            let key = indexToKey(this.prefix, index);\n            if (near.storageWrite(key, JSON.stringify(element))) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    extend(elements) {\n        for (let element of elements) {\n            this.push(element);\n        }\n    }\n    [Symbol.iterator]() {\n        return new VectorIterator(this);\n    }\n    clear() {\n        for (let i = 0; i < this.length; i++) {\n            let key = indexToKey(this.prefix, i);\n            near.storageRemove(key);\n        }\n        this.length = 0;\n    }\n    toArray() {\n        let ret = [];\n        for (let v of this) {\n            ret.push(v);\n        }\n        return ret;\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        let vector = new Vector(data.prefix);\n        vector.length = data.length;\n        return vector;\n    }\n}\nexport class VectorIterator {\n    constructor(vector) {\n        this.current = 0;\n        this.vector = vector;\n    }\n    next() {\n        if (this.current < this.vector.length) {\n            let value = this.vector.get(this.current);\n            this.current += 1;\n            return { value, done: false };\n        }\n        return { value: null, done: true };\n    }\n}\n","import { Vector, VectorIterator } from \"./vector\";\nimport { LookupMap } from \"./lookup-map\";\nconst ERR_INCONSISTENT_STATE = \"The collection is an inconsistent state. Did previous smart contract execution terminate unexpectedly?\";\nexport class UnorderedMap {\n    constructor(prefix) {\n        this.prefix = prefix;\n        this.keys = new Vector(prefix + 'u'); // intentional different prefix with old UnorderedMap\n        this.values = new LookupMap(prefix + 'm');\n    }\n    get length() {\n        let keysLen = this.keys.length;\n        return keysLen;\n    }\n    isEmpty() {\n        let keysIsEmpty = this.keys.isEmpty();\n        return keysIsEmpty;\n    }\n    get(key) {\n        let valueAndIndex = this.values.get(key);\n        if (valueAndIndex === null) {\n            return null;\n        }\n        let value = valueAndIndex[0];\n        return value;\n    }\n    set(key, value) {\n        let valueAndIndex = this.values.get(key);\n        if (valueAndIndex !== null) {\n            let oldValue = valueAndIndex[0];\n            valueAndIndex[0] = value;\n            this.values.set(key, valueAndIndex);\n            return oldValue;\n        }\n        let nextIndex = this.length;\n        this.keys.push(key);\n        this.values.set(key, [value, nextIndex]);\n        return null;\n    }\n    remove(key) {\n        let oldValueAndIndex = this.values.remove(key);\n        if (oldValueAndIndex === null) {\n            return null;\n        }\n        let index = oldValueAndIndex[1];\n        if (this.keys.swapRemove(index) === null) {\n            throw new Error(ERR_INCONSISTENT_STATE);\n        }\n        // the last key is swapped to key[index], the corresponding [value, index] need update\n        if (this.keys.length > 0 && index != this.keys.length) {\n            // if there is still elements and it was not the last element\n            let swappedKey = this.keys.get(index);\n            let swappedValueAndIndex = this.values.get(swappedKey);\n            if (swappedValueAndIndex === null) {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n            this.values.set(swappedKey, [swappedValueAndIndex[0], index]);\n        }\n        return oldValueAndIndex[0];\n    }\n    clear() {\n        for (let key of this.keys) {\n            // Set instead of remove to avoid loading the value from storage.\n            this.values.set(key, null);\n        }\n        this.keys.clear();\n    }\n    toArray() {\n        let ret = [];\n        for (let v of this) {\n            ret.push(v);\n        }\n        return ret;\n    }\n    [Symbol.iterator]() {\n        return new UnorderedMapIterator(this);\n    }\n    extend(kvs) {\n        for (let [k, v] of kvs) {\n            this.set(k, v);\n        }\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        let map = new UnorderedMap(data.prefix);\n        // reconstruct keys Vector\n        map.keys = new Vector(data.prefix + \"u\");\n        map.keys.length = data.keys.length;\n        // reconstruct values LookupMap\n        map.values = new LookupMap(data.prefix + \"m\");\n        return map;\n    }\n}\nclass UnorderedMapIterator {\n    constructor(unorderedMap) {\n        this.keys = new VectorIterator(unorderedMap.keys);\n        this.map = unorderedMap.values;\n    }\n    next() {\n        let key = this.keys.next();\n        let value;\n        if (!key.done) {\n            value = this.map.get(key.value);\n            if (value === null) {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n        return { value: [key.value, value ? value[0] : value], done: key.done };\n    }\n}\n","import * as near from \"./api\";\nexport class PromiseAction {\n}\nexport class CreateAccount extends PromiseAction {\n    add(promise_index) {\n        near.promiseBatchActionCreateAccount(promise_index);\n    }\n}\nexport class DeployContract extends PromiseAction {\n    constructor(code) {\n        super();\n        this.code = code;\n    }\n    add(promise_index) {\n        near.promiseBatchActionDeployContract(promise_index, this.code);\n    }\n}\nexport class FunctionCall extends PromiseAction {\n    constructor(function_name, args, amount, gas) {\n        super();\n        this.function_name = function_name;\n        this.args = args;\n        this.amount = amount;\n        this.gas = gas;\n    }\n    add(promise_index) {\n        near.promiseBatchActionFunctionCall(promise_index, this.function_name, this.args, this.amount, this.gas);\n    }\n}\nexport class FunctionCallWeight extends PromiseAction {\n    constructor(function_name, args, amount, gas, weight) {\n        super();\n        this.function_name = function_name;\n        this.args = args;\n        this.amount = amount;\n        this.gas = gas;\n        this.weight = weight;\n    }\n    add(promise_index) {\n        near.promiseBatchActionFunctionCallWeight(promise_index, this.function_name, this.args, this.amount, this.gas, this.weight);\n    }\n}\nexport class Transfer extends PromiseAction {\n    constructor(amount) {\n        super();\n        this.amount = amount;\n    }\n    add(promise_index) {\n        near.promiseBatchActionTransfer(promise_index, this.amount);\n    }\n}\nexport class Stake extends PromiseAction {\n    constructor(amount, public_key) {\n        super();\n        this.amount = amount;\n        this.public_key = public_key;\n    }\n    add(promise_index) {\n        near.promiseBatchActionStake(promise_index, this.amount, this.public_key.data);\n    }\n}\nexport class AddFullAccessKey extends PromiseAction {\n    constructor(public_key, nonce) {\n        super();\n        this.public_key = public_key;\n        this.nonce = nonce;\n    }\n    add(promise_index) {\n        near.promiseBatchActionAddKeyWithFullAccess(promise_index, this.public_key.data, this.nonce);\n    }\n}\nexport class AddAccessKey extends PromiseAction {\n    constructor(public_key, allowance, receiver_id, function_names, nonce) {\n        super();\n        this.public_key = public_key;\n        this.allowance = allowance;\n        this.receiver_id = receiver_id;\n        this.function_names = function_names;\n        this.nonce = nonce;\n    }\n    add(promise_index) {\n        near.promiseBatchActionAddKeyWithFunctionCall(promise_index, this.public_key.data, this.nonce, this.allowance, this.receiver_id, this.function_names);\n    }\n}\nexport class DeleteKey extends PromiseAction {\n    constructor(public_key) {\n        super();\n        this.public_key = public_key;\n    }\n    add(promise_index) {\n        near.promiseBatchActionDeleteKey(promise_index, this.public_key.data);\n    }\n}\nexport class DeleteAccount extends PromiseAction {\n    constructor(beneficiary_id) {\n        super();\n        this.beneficiary_id = beneficiary_id;\n    }\n    add(promise_index) {\n        near.promiseBatchActionDeleteAccount(promise_index, this.beneficiary_id);\n    }\n}\nclass PromiseSingle {\n    constructor(account_id, actions, after, promise_index) {\n        this.account_id = account_id;\n        this.actions = actions;\n        this.after = after;\n        this.promise_index = promise_index;\n    }\n    constructRecursively() {\n        if (this.promise_index !== null) {\n            return this.promise_index;\n        }\n        let promise_index;\n        if (this.after) {\n            promise_index = near.promiseBatchThen(this.after.constructRecursively(), this.account_id);\n        }\n        else {\n            promise_index = near.promiseBatchCreate(this.account_id);\n        }\n        for (let action of this.actions) {\n            action.add(promise_index);\n        }\n        this.promise_index = promise_index;\n        return promise_index;\n    }\n}\nexport class PromiseJoint {\n    constructor(promise_a, promise_b, promise_index) {\n        this.promise_a = promise_a;\n        this.promise_b = promise_b;\n        this.promise_index = promise_index;\n    }\n    constructRecursively() {\n        if (this.promise_index !== null) {\n            return this.promise_index;\n        }\n        let res = near.promiseAnd(BigInt(this.promise_a.constructRecursively()), BigInt(this.promise_b.constructRecursively()));\n        this.promise_index = res;\n        return res;\n    }\n}\nexport class NearPromise {\n    constructor(subtype, should_return) {\n        this.subtype = subtype;\n        this.should_return = should_return;\n    }\n    static new(account_id) {\n        let subtype = new PromiseSingle(account_id, [], null, null);\n        let ret = new NearPromise(subtype, false);\n        return ret;\n    }\n    add_action(action) {\n        if (this.subtype instanceof PromiseJoint) {\n            throw new Error(\"Cannot add action to a joint promise.\");\n        }\n        else {\n            this.subtype.actions.push(action);\n        }\n        return this;\n    }\n    createAccount() {\n        return this.add_action(new CreateAccount());\n    }\n    deployContract(code) {\n        return this.add_action(new DeployContract(code));\n    }\n    functionCall(function_name, args, amount, gas) {\n        return this.add_action(new FunctionCall(function_name, args, amount, gas));\n    }\n    functionCallWeight(function_name, args, amount, gas, weight) {\n        return this.add_action(new FunctionCallWeight(function_name, args, amount, gas, weight));\n    }\n    transfer(amount) {\n        return this.add_action(new Transfer(amount));\n    }\n    stake(amount, public_key) {\n        return this.add_action(new Stake(amount, public_key));\n    }\n    addFullAccessKey(public_key) {\n        return this.addFullAccessKeyWithNonce(public_key, 0n);\n    }\n    addFullAccessKeyWithNonce(public_key, nonce) {\n        return this.add_action(new AddFullAccessKey(public_key, nonce));\n    }\n    addAccessKey(public_key, allowance, receiver_id, method_names) {\n        return this.addAccessKeyWithNonce(public_key, allowance, receiver_id, method_names, 0n);\n    }\n    addAccessKeyWithNonce(public_key, allowance, receiver_id, method_names, nonce) {\n        return this.add_action(new AddAccessKey(public_key, allowance, receiver_id, method_names, nonce));\n    }\n    deleteKey(public_key) {\n        return this.add_action(new DeleteKey(public_key));\n    }\n    deleteAccount(beneficiary_id) {\n        return this.add_action(new DeleteAccount(beneficiary_id));\n    }\n    and(other) {\n        let subtype = new PromiseJoint(this, other, null);\n        let ret = new NearPromise(subtype, false);\n        return ret;\n    }\n    then(other) {\n        if (other.subtype instanceof PromiseSingle) {\n            if (other.subtype.after !== null) {\n                throw new Error(\"Cannot callback promise which is already scheduled after another\");\n            }\n            other.subtype.after = this;\n        }\n        else {\n            throw new Error(\"Cannot callback joint promise.\");\n        }\n        return other;\n    }\n    asReturn() {\n        this.should_return = true;\n        return this;\n    }\n    constructRecursively() {\n        let res = this.subtype.constructRecursively();\n        if (this.should_return) {\n            near.promiseReturn(res);\n        }\n        return res;\n    }\n    // Called by NearBindgen, when return object is a NearPromise instance.\n    onReturn() {\n        this.asReturn().constructRecursively();\n    }\n}\n","export const STORAGE_COST: bigint = BigInt(\"1000000000000000000000\")\n\nexport class Avatar {\n  contract_id: string;\n  token_id: string;\n\n  constructor({contract_id, token_id}: Avatar) {\n    this.contract_id = contract_id;\n    this.token_id = token_id;\n  }\n}","import { NearBindgen, near, call, view, UnorderedMap, NearPromise, bytes, assert } from 'near-sdk-js';\nimport { Avatar, STORAGE_COST } from './model';\n\nconst NO_DEPOSIT = BigInt(0);\nconst NO_GAS = BigInt(0);\nconst NO_ARGS = bytes(JSON.stringify({}));\nconst FIVE_TGAS = BigInt(\"50000000000000\");\n\n@NearBindgen({})\nclass Nravatar {\n  avatars: UnorderedMap = new UnorderedMap('avatars')\n\n  @view({})\n  get_avatar({account_id = ''}:{account_id: string}): Avatar {\n    if (account_id === '') {\n      let accountId = near.predecessorAccountId(); \n      return this.avatars.get(accountId) as Avatar;\n    }\n    return this.avatars.get(account_id) as Avatar;\n  }\n\n  @view({})\n  number_of_avatar() {\n    return this.avatars.length;\n  }\n\n  @view({})\n  get_avatars({from_index = 0, limit = 50}: {from_index:number, limit:number}): Avatar[] {\n    let ret:Avatar[] = [];\n    let end = Math.min(limit, this.avatars.length);\n    for(let i = from_index; i < end; i++){\n      const account_id: string = this.avatars.keys.get(i) as string;\n      const avatar: Avatar = this.get_avatar({account_id});\n      ret.push(avatar);\n    }\n    return ret;\n  }\n\n  @call({ payableFunction: true })\n  set_avatar({ contract_id, token_id }: { contract_id: string, token_id: string }) {\n    let accountId = near.predecessorAccountId(); \n    let deposit: bigint = near.attachedDeposit() as bigint;\n    \n    let oldAvatar = this.avatars.get(accountId);\n    if (oldAvatar === null) {\n      assert(deposit > STORAGE_COST, `Attach at least ${STORAGE_COST} yoctoNEAR`);\n    }\n    const promise = NearPromise.new(contract_id)\n    .functionCall(\"nft_token\", bytes(JSON.stringify({ token_id })), NO_DEPOSIT, FIVE_TGAS)\n    .then(\n      NearPromise.new(near.currentAccountId())\n      .functionCall(\"create_avatar\", bytes(JSON.stringify({ account_id: accountId, contract_id, token_id })), NO_DEPOSIT, FIVE_TGAS)\n    );\n\n    return promise.asReturn();\n  }\n\n  @call({ privateFunction: true })\n  create_avatar({ account_id, contract_id, token_id }: { account_id: string, contract_id: string, token_id: string }): Avatar {\n    let { success, owner_id } = promiseResult();\n    \n    assert(success, \"NFT contract or token id is not valid\");\n    assert(owner_id === account_id, `NFT is owned by the ${owner_id}, not ${account_id}`);\n\n    let avatar = new Avatar({ contract_id, token_id });\n    this.avatars.set(account_id, avatar);\n\n    return avatar;\n  }\n\n  @view({})\n  delete_avatar() {\n    let accountId = near.predecessorAccountId(); \n    this.avatars.set(accountId, null);\n  }\n}\n\nfunction promiseResult(): { success: boolean, owner_id: string } {\n  let success, owner_id;\n  \n  try {\n    let result = near.promiseResult(0);\n    if (typeof result === 'string') {\n      let nft_token = JSON.parse(result);\n      owner_id = nft_token.owner_id;\n    }\n    success = true;\n  } catch{\n    success = false;\n    owner_id = '';\n  }\n  \n  return {\n    success,\n    owner_id,\n  };\n}"],"names":["PromiseResult","PromiseError","u8ArrayToBytes","array","ret","e","String","fromCharCode","bytes","strOrU8Array","checkStringIsBytes","Uint8Array","Error","str","i","length","charCodeAt","assert","b","assertNumber","n","Number","isSafeInteger","chain","args","wrap","a","c","encode","Array","from","reverse","reduce","acc","undefined","decode","alphabet","digits","isArray","map","input","letter","index","indexOf","join","separator","to","split","padding","bits","chr","data","push","end","slice","normalize","fn","convertRadix","pos","res","forEach","d","carry","done","digit","digitBase","Math","floor","gcd","radix2carry","convertRadix2","mask","radix","num","radix2","revPadding","unsafeWrapper","apply","base16","base32","s","toUpperCase","replace","base64","base64url","genBase58","abc","base58","XMR_BLOCK_LEN","base58xmr","block","subarray","padStart","blockLen","j","concat","BECH_ALPHABET","POLYMOD_GENERATORS","bech32Polymod","pre","chk","bechChecksum","prefix","words","encodingConst","len","v","genBech32","encoding","ENCODING_CONST","_words","fromWords","toWords","fromWordsUnsafe","limit","actualLength","TypeError","toLowerCase","lowered","sepIndex","lastIndexOf","sum","endsWith","decodeUnsafe","decodeToBytes","utf8","TextDecoder","TextEncoder","hex","CODERS","Object","keys","CurveType","U64_MAX","EVICTED_REGISTER","predecessorAccountId","env","predecessor_account_id","read_register","attachedDeposit","attached_deposit","storageRead","key","storage_read","storageHasKey","storage_has_key","storageGetEvicted","currentAccountId","current_account_id","promiseAnd","promiseIndex","promise_and","promiseBatchCreate","accountId","promise_batch_create","promiseBatchThen","promise_batch_then","promiseBatchActionCreateAccount","promise_batch_action_create_account","promiseBatchActionDeployContract","code","promise_batch_action_deploy_contract","promiseBatchActionFunctionCall","methodName","amount","gas","promise_batch_action_function_call","promiseBatchActionTransfer","promise_batch_action_transfer","promiseBatchActionStake","publicKey","promise_batch_action_stake","promiseBatchActionAddKeyWithFullAccess","nonce","promise_batch_action_add_key_with_full_access","promiseBatchActionAddKeyWithFunctionCall","allowance","receiverId","methodNames","promise_batch_action_add_key_with_function_call","promiseBatchActionDeleteKey","promise_batch_action_delete_key","promiseBatchActionDeleteAccount","beneficiaryId","promise_batch_action_delete_account","promiseBatchActionFunctionCallWeight","weight","promise_batch_action_function_call_weight","promiseResult","resultIdx","status","promise_result","Successful","Failed","NotReady","promiseReturn","promiseIdx","promise_return","storageWrite","value","exist","storage_write","storageRemove","storage_remove","call","privateFunction","payableFunction","target","descriptor","originalMethod","near","BigInt","view","NearBindgen","requireInit","_create","_getState","rawState","_deserialize","_saveToStorage","obj","_serialize","_getArgs","JSON","parse","stringify","_reconstruct","classObject","plainObject","item","constructor","deserialize","_requireInit","LookupMap","keyPrefix","containsKey","storageKey","get","raw","remove","set","storageValue","extend","objects","kv","serialize","ERR_INDEX_OUT_OF_BOUNDS","ERR_INCONSISTENT_STATE","indexToKey","Uint32Array","buffer","Vector","isEmpty","swapRemove","pop","last","element","lastIndex","lastKey","elements","Symbol","iterator","VectorIterator","clear","toArray","vector","current","next","UnorderedMap","values","keysLen","keysIsEmpty","valueAndIndex","oldValue","nextIndex","oldValueAndIndex","swappedKey","swappedValueAndIndex","UnorderedMapIterator","kvs","k","unorderedMap","PromiseAction","CreateAccount","add","promise_index","DeployContract","FunctionCall","function_name","FunctionCallWeight","Transfer","Stake","public_key","AddFullAccessKey","AddAccessKey","receiver_id","function_names","DeleteKey","DeleteAccount","beneficiary_id","PromiseSingle","account_id","actions","after","constructRecursively","action","PromiseJoint","promise_a","promise_b","NearPromise","subtype","should_return","new","add_action","createAccount","deployContract","functionCall","functionCallWeight","transfer","stake","addFullAccessKey","addFullAccessKeyWithNonce","addAccessKey","method_names","addAccessKeyWithNonce","deleteKey","deleteAccount","and","other","then","asReturn","onReturn","STORAGE_COST","Avatar","contract_id","token_id","NO_DEPOSIT","FIVE_TGAS","Nravatar","avatars","get_avatar","number_of_avatar","get_avatars","from_index","min","avatar","set_avatar","deposit","oldAvatar","promise","create_avatar","success","owner_id","delete_avatar","result","nft_token"],"mappings":"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"}